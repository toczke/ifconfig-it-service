name: Deploy IT Service

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string

jobs:
  cleanup:
    runs-on: self-hosted
    steps:
      - name: Cleanup old containers
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker compose down -v || true
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker system prune -a -f

  checkout:
    runs-on: self-hosted
    needs: cleanup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

  setup-env:
    runs-on: self-hosted
    needs: checkout
    steps:
      - name: Create bot .env
        run: |
          mkdir -p packages/discord-bot
          cat <<EOF > packages/discord-bot/.env
          DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}
          NEW_REQUESTS_CHANNEL_ID=${{ secrets.NEW_REQUESTS_CHANNEL_ID }}
          IN_PROGRESS_CHANNEL_ID=${{ secrets.IN_PROGRESS_CHANNEL_ID }}
          DONE_CHANNEL_ID=${{ secrets.DONE_CHANNEL_ID }}
          REJECTED_CHANNEL_ID=${{ secrets.REJECTED_CHANNEL_ID }}
          FRONTEND_URL=http://frontend:4173
          PORT=3001
          EOF

      - name: Create frontend .env
        run: |
          mkdir -p packages/static-frontend
          cat <<EOF > packages/static-frontend/.env
          VITE_DISCORD_WEBHOOK_URL=${{ secrets.VITE_DISCORD_WEBHOOK_URL }}
          VITE_BOT_SERVER_URL=http://bot:3001
          EOF

  deploy:
    runs-on: self-hosted
    needs: setup-env
    steps:
      - name: Build and deploy
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker compose up -d --build

      - name: Verify services
        run: |
          echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker ps
          echo "Frontend running on port 4173"
          echo "Bot running on port 3001"